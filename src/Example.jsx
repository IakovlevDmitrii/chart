import React, { PureComponent } from 'react';import {   LineChart,   Line,   XAxis,   YAxis,   CartesianGrid,   Tooltip,   Legend,} from 'recharts';const data = [   {      name: 'Page A',      uv: 4000,      pv: 2400,   },   {      name: 'Page B',      uv: 3000,      pv: 1398,   },   {      name: 'Page C',      uv: 2000,      pv: 9800,   },   {      name: 'Page D',      uv: 2780,      pv: 3908,   },   {      name: 'Page E',      uv: 1890,      pv: 4800,   },   {      name: 'Page F',      uv: 2390,      pv: 3800,   },   {      name: 'Page G',      uv: 3490,      pv: 4300,   },];const getData = (data, lineName) => {   const average = data.reduce( (sum, elem) => {      return sum + elem[lineName];   }, 0) / data.length;   const dispersion = data.reduce( (sum, elem) => {      return sum + Math.pow( (elem[lineName] - average), 2);   }, 0) / data.length;   const standardDeviation = Math.sqrt(dispersion);   const lineValues = data.map(elem => elem[lineName]);   const maxValue = Math.max.apply(null, lineValues);   const mimValue = Math.min.apply(null, lineValues);   const lineHeight = maxValue - mimValue;   const middleLine = maxValue - average;   return {      topLimit: (middleLine - standardDeviation) / lineHeight * 100,      lowerLimit: (middleLine + standardDeviation) / lineHeight * 100,   }};const Gradient = ( {data, lineName, color} ) => {   const {topLimit, lowerLimit} = getData(data, lineName);   return (      <linearGradient id={`${lineName}Gradient`} x1="0" y1="0" x2="0" y2="100%">         <stop offset="0%" stopColor="red" />         <stop offset={`${topLimit}%`} stopColor="red" />         <stop offset={`${topLimit}%`} stopColor={`${color}`} />         <stop offset={`${lowerLimit}%`} stopColor={`${color}`} />         <stop offset={`${lowerLimit}%`} stopColor="red" />         <stop offset="100%" stopColor="red" />      </linearGradient>   )};export default class Example extends PureComponent {   render() {      return (         <LineChart            width={500}            height={300}            data={data}            margin={{               top: 5,               right: 30,               left: 20,               bottom: 5,            }}         >            <defs>               <Gradient data={data} lineName={'pv'} color={'#8884d8'} />               <Gradient data={data} lineName={'uv'} color={'#82ca9d'} />            </defs>         <CartesianGrid strokeDasharray="3 3" />         <XAxis dataKey="name" />         <YAxis />         <Tooltip />         <Legend />         <Line            type="monotone"            dataKey="pv"            stroke="url(#pvGradient)"            dot={false}            activeDot={{ r: 8 }}         />         <Line            type="monotone"            dataKey="uv"            stroke="url(#uvGradient)"            dot={false}         />      </LineChart>      );   }}